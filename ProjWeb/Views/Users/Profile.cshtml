
@{
    ViewBag.Title = "Profile";
}
@using ProjWeb.Models
<h2>Profile</h2>
<style>
    table {
        margin-top: 5%;
        align-content: center;
        width: 75%;
        border-collapse: collapse;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
        width: 20%
    }

    tr:nth-child(even) {
        background-color: #D6EEEE;
        border-bottom: 1px solid #ddd;
    }
</style>

@{
    User visitor = (User)Session["visitor"];

    if (visitor != null)
    {
        <p>username: @visitor.username</p>
        <p>name: @visitor.name</p>
        <p>last name: @visitor.lastName</p>
        <p>role: @visitor.role</p>
        <p>email: @visitor.email</p>
        <p>gender: @visitor.gender</p>
        <p>data of birth: @visitor.dateOfBirth</p>
        <br />
        <h3>EDIT PROFILE:</h3>
        <form method="post" action="~/Users/Register">
            <input required name="password" type="password" id="password" />
            <label for="password">password</label>
            <br />
            <input required name="name" id="name" />
            <label for="name">name</label>
            <br />
            <input required name="lastName" id="lastName" />
            <label for="lastName">last name</label>
            <br />
            <input required name="email" type="email" id="email" />
            <label for="email">email</label>
            <br />
            <input required name="dateOfBirth" type="date" id="date" />
            <label for="date">date of birth</label>
            <br />
            <br />
            <label>gender</label>
            <br />
            <input required type="radio" id="male" name="gender" value="male">
            <label for="male">male</label>
            <br />
            <input required type="radio" id="female" name="gender" value="female">
            <label for="female">female</label>
            <br />
            <input required name="role" id="role" value="@visitor.role.ToString()" readonly />
            <label for="role">role</label>
            <br />
            <input type="submit" value="Edit" />
        </form>
        <br />
        <br />
        <h2>Trainings</h2>

        <input type="text" id="Input" onkeyup="searchTable()" placeholder="Search by name...">
        <input type="text" id="Input1" onkeyup="searchTable()" placeholder="Search by type...">
        <input type="text" id="Input2" onkeyup="searchTable()" placeholder="Search by center...">
        <table id="fitness">
            <tr>
                <th onclick="sortTable(0)">name</th>
                <th onclick="sortTable(1)">type</th>
                <th onclick="sortTable(2)">center</th>
                <th onclick="sortTable(3)">duration</th>
                <th onclick="sortTable(4)">time</th>
                <th onclick="sortTable(5)">capacity</th>
            </tr>
            @foreach (GroupTraining gt in visitor.groupTrainings)
            {
                <tr>
                    <td>@gt.name</td>
                    <td>@gt.trainingType</td>
                    <td>@gt.fitnessCenter.name</td>
                    <td>@gt.trainingDuration</td>
                    <td>@gt.trainingTime</td>
                    <td>@gt.userCapacity</td>
                </tr>
            }
        </table>
        if (visitor.role.Equals(role.owner))
        {
            <h3>BAN TRAINER</h3>
            foreach (User u in Database.users.Values.Where(x => x.role.Equals(role.trainer) && x.fitnessCenter.Count != 0))
            {
                if (u.trainerBanned)
                {
                    continue;
                }

                <li>
                    @if (visitor.fitnessCenter.Contains(u.fitnessCenter[0]))
                    {
                        <form form method="post" action="~/Fitness/BanTrainer">
                            <input type="submit" name="trainer" value="@u.username" style="width:100%" />
                        </form>
                    }
                </li>

            }
        }
    }
}

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("fitness");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
    function searchTable() {
        var input = document.getElementById("Input");
        var input1 = document.getElementById("Input1");
        var input2 = document.getElementById("Input2");
        var filter = input.value.toUpperCase();
        var filter1 = input1.value.toUpperCase();
        var filter2 = input2.value.toUpperCase();
        var table = document.getElementById("fitness");
        var trs = table.tBodies[0].getElementsByTagName("tr");

        for (var i = 1; i < trs.length; i++) {

            var tds = trs[i].getElementsByTagName("td");

            trs[i].style.display = "none";

            for (var i2 = 0; i2 < tds.length; i2++) {

                if (tds[0].innerHTML.toUpperCase().indexOf(filter) > -1
                    && tds[1].innerHTML.toUpperCase().indexOf(filter1) > -1
                    && tds[2].innerHTML.toUpperCase().indexOf(filter2) > -1) {

                    trs[i].style.display = "";
                    continue;
                }
            }
        }

    }
</script>